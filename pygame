import pygame
import time
import random
pygame.font.init()

WIDTH,HEIGHT = 1000,800
WIN=pygame.display.set_mode((WIDTH,HEIGHT))
pygame.display.set_caption("Space Dodge")

BG=pygame.transform.scale(pygame.image.load("space.jpg"), (WIDTH, HEIGHT))#Allows for the image to be scaled to fit the whole screen, but won't preserve the aspect ratio
PLAYER_WIDTH = 40
PLAYER_HEIGHT=60
PLAYER_VEL=5
STAR_WIDTH=10
STAR_HEIGHT=20
STAR_VEL=3

FONT=pygame.font.SysFont("comicsans",30)

def draw(player,elapsed_time,stars):#will draw items on the screen
    WIN.blit(BG,(0,0))

    time_text= FONT.render(f"Time : {round(elapsed_time)}s", 1, "white")
    WIN.blit(time_text, (10,10))#will display the text above at coordinates10,10 on the screen

    pygame.draw.rect(WIN, "light blue", player)

    for star in stars:
        pygame.draw.rect(WIN,"white",star)

    pygame.display.update()

def main():# allows the pygame window to close when the X in the window is pressed
    run= True
    hit=False
    player= pygame.Rect(500, HEIGHT-PLAYER_HEIGHT, PLAYER_WIDTH, PLAYER_HEIGHT)
    clock=pygame.time.Clock()
    start_time=time.time()#will give us the current time for when the game started
    elapsed_time=0

    star_add_increment = 2000
    star_count=0#will count the stars
    stars=[]#this is where all teh stars on the screen will be stored


    while run:
        star_count+=clock.tick(60)#returns the num of milliseconds since the last clock tick
        elapsed_time=time.time()-start_time#willgive you the number of seconds since the game started
        if star_count>star_add_increment:
            for _ in range(3):#INCREMENTS BY 3
                star_x = random.randint(0, WIDTH -STAR_WIDTH)
                star=pygame.Rect(star_x,-STAR_HEIGHT,STAR_WIDTH,STAR_HEIGHT)#SO THAT THE STAR ENTERS THE SCREEN AND NOT JUST APPEARS ON IT
                stars.append(star)
            star_add_increment=max(200,star_add_increment - 50)#makes it so that the max start ever is 200
            star_count=0

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run=False
                break
        keys= pygame.key.get_pressed()#the code to move the player
        if keys[pygame.K_LEFT] and player.x-PLAYER_VEL >=0:# the "and bla bla", allows for the player to not go past the edge of teh screen
            player.x-= PLAYER_VEL
        if keys[pygame.K_RIGHT]and player.x+PLAYER_VEL + player.width <= WIDTH:
            player.x += PLAYER_VEL
        for star in stars[:]:
            star.y+=STAR_VEL
            if star.y>HEIGHT:
                stars.remove(star)
            elif star.y+star.height >=player.y and star.colliderect(player):
                stars.remove(star)
                hit=True
                break
        if hit:
            lost_text =FONT.render("You Lost!", 1, "white")
            WIN.blit(lost_text,(WIDTH/2-lost_text.get_width()/2,HEIGHT/2-lost_text.get_height()/2))#puts the text in the middle
            pygame.display.update()
            pygame.time.delay(4000)#delays for 4 secods/4000 miliseconds
            break


        draw(player,elapsed_time,stars)
    pygame.quit()
if __name__=="__main__":#makes sure we directly run the python file instead, rather than importing it, so that the python game can ONLY run if this file runs it

    main()
